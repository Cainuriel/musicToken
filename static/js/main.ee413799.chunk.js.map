{"version":3,"sources":["App.js","index.js"],"names":["presaleaddress","App","useState","network","setNetwork","contractBalance","setContractBalance","setUserAccount","setUserBalance","userBalanceTops","setUserBalanceTops","amount","setAmount","rate","setRate","info","setInfo","amountTops","offSetY","setOffSetY","handleScroll","window","scrollY","a","networkData","chainId","chainName","rpcUrls","nativeCurrency","name","symbol","decimals","blockExplorerUrls","ethereum","request","method","params","console","log","provider","ethers","providers","Web3Provider","getNetwork","signer","getSigner","getAddress","accountUser","cuentaUsuario","toString","subini","substr","subfinal","document","querySelector","innerHTML","getBalance","accountUserBalance","utils","formatEther","result","Number","parseFloat","toFixed","resultado","concat","bnbButton","classList","remove","contract","Contract","Presale","abi","getBalanceTops","from","balanceTops","balance","tops","isconnectedMetamask","accounts","cuentaRecortada","contractUserBalance","on","networkId","fetchrate","data","TokenBalance","tokens","account","bnbamount","parseEther","buyTokens","value","transaction","Swal","fire","title","text","showConfirmButton","imageUrl","imageWidth","imageHeight","imageAlt","wait","html","hash","icon","confirmButtonText","confirmButtonClass","buttonsStyling","showCloseButton","then","isConfirmed","addTokenToMetamask","isDenied","mensajeError","message","useEffect","addEventListener","removeEventListener","changeAccounts","changeNetwork","showCancelButton","addNetwork","open","type","options","address","image","className","style","transform","href","src","height","alt","id","onClick","onMouseEnter","onMouseLeave","step","autoFocus","onChange","e","target","replace","placeholder","disabled","autoPlay","muted","ReactDOM","render","getElementById"],"mappings":"unkBAQMA,EAAiB,6CAqgBRC,MAjgBf,WAEE,MAA8BC,mBAAS,UAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8CF,mBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAoBK,GAApB,WACA,EAAsCL,mBAAS,GAA/C,mBAAoBM,GAApB,WACA,EAA8CN,mBAAS,GAAvD,mBAAOO,EAAP,KAAwBC,EAAxB,KACA,EAA4BR,mBAAS,GAArC,mBAAOS,EAAP,KAAeC,EAAf,KACA,EAAwBV,mBAAS,GAAjC,mBAAOW,EAAP,KAAaC,EAAb,KACA,EAAwBZ,oBAAS,GAAjC,mBAAOa,EAAP,KAAaC,EAAb,KACIC,EAAaN,EAASE,EAK1B,EAA8BX,mBAAS,GAAvC,mBAAOgB,EAAP,KAAgBC,EAAhB,KACMC,EAAe,kBAAMD,EAAWE,OAAOC,UAhBhC,4CAqCb,4BAAAC,EAAA,6DAeQC,EAAc,CAAC,CACfC,QAAS,OACTC,UAAW,YACXC,QAAS,CAAC,qCACVC,eAAgB,CACdC,KAAM,eACNC,OAAQ,MACRC,SAAU,IAEZC,kBAAmB,CAAC,kCAxB5B,kBA6BWX,OAAOY,SAASC,QAAQ,CAC7BC,OAAQ,0BACRC,OAAQZ,KA/Bd,4CArCa,kEAiIb,0DAAAD,EAAA,6DACEc,QAAQC,IAAI,+BADd,SAGQjB,OAAOY,SAASC,QAAQ,CAAEC,OAAQ,wBAH1C,cAIQI,EAAW,IAAIC,IAAOC,UAAUC,aAAarB,OAAOY,UAJ5D,SAMwBM,EAASI,aANjC,cAMQxC,EANR,OAOEkC,QAAQC,IAAI,UAAWnC,EAAQ0B,MAC/BzB,EAAWD,EAAQ0B,MAEbe,EAASL,EAASM,YAV1B,UAW4BD,EAAOE,aAXnC,eAWQC,EAXR,OAaMC,EAAgBD,EAAYE,WAC5BC,EAASF,EAAcG,OAAO,EAAE,GAChCC,EAAWJ,EAAcG,QAAQ,EAAE,GACvCE,SAASC,cAAc,WAAWC,UAAlC,UAAiDL,EAAjD,gBAA+DE,GAhBjE,UAkBmCb,EAASiB,WAAWT,GAlBvD,eAkBQU,EAlBR,OAmBM9C,EAAS6B,IAAOkB,MAAMC,YAAYF,GAAoBR,WACtDW,EAASC,OAAOC,WAAWnD,GAAQoD,QAAQ,GAChC,MACXC,EAAYJ,EAAOK,OAAO,IADf,QAEXC,EAAYb,SAASC,cAAc,UAC7Ba,UAAUC,OAAO,UAC3BF,EAAUX,UAAYS,EAEhBK,EAAW,IAAI7B,IAAO8B,SAAStE,EAAgBuE,EAAQC,IAAKjC,GA3BpE,oBA6B8B8B,EAASI,eAAe,CAAEC,KAAM1B,IA7B9D,QA6BU2B,EA7BV,OA8BQC,EAAUpC,IAAOkB,MAAMC,YAAYgB,GAAa1B,WAChD4B,EAAOhB,OAAOC,WAAWc,GAASb,QAAQ,GAC9CrD,EAAmBmE,GACnBxB,SAASC,cAAc,SAASa,UAAUC,OAAO,UAjCrD,mDAoCI/B,QAAQC,IAAI,UAAZ,MApCJ,2DAjIa,iCA4KEwC,IA5KF,2EA4Kb,wDAAAvD,EAAA,sEAE2BF,OAAOY,SAASC,QAAQ,CAAEC,OAAQ,iBAF7D,UAEU4C,EAFV,SAGQ/B,EAAgB+B,EAAS,IAHjC,wBAOU7B,EAASF,EAAcG,OAAO,EAAE,GAChCC,EAAWJ,EAAcG,QAAQ,EAAE,GACnC6B,EATV,UAS+B9B,EAT/B,gBAS6CE,GACvC7C,EAAeyC,GAEfK,SAASC,cAAc,WAAWC,UAAYyB,EAExCzC,EAAW,IAAIC,IAAOC,UAAUC,aAAarB,OAAOY,UAdhE,UAewCM,EAASiB,WAAWR,GAf5D,eAeYiC,EAfZ,OAgBUtE,EAAS6B,IAAOkB,MAAMC,YAAYsB,GAAqBhC,WACvDW,EAASC,OAAOC,WAAWnD,GAAQoD,QAAQ,IAC3CG,EAAYb,SAASC,cAAc,UAC7Ba,UAAUC,OAAO,UAC3BF,EAAUX,UAAV,UAAyBK,EAAzB,QACApD,EAAe,GAAD,OAAIoD,EAAJ,SArBpB,UAuB4BrB,EAASI,aAvBrC,eAuBYxC,EAvBZ,OAwBMkC,QAAQC,IAAI,UAAWnC,EAAQ0B,MAC/BzB,EAAWD,EAAQ0B,MAEbwC,EAAW,IAAI7B,IAAO8B,SAAStE,EAAgBuE,EAAQC,IAAKjC,GA3BxE,oBA6BkC8B,EAASI,eAAe,CAAEC,KAAM1B,IA7BlE,QA6Bc2B,EA7Bd,OA8BY1D,EAAauB,IAAOkB,MAAMC,YAAYgB,GAAa1B,WACnD4B,EAAOhB,OAAOC,WAAW7C,GAAY8C,QAAQ,GACjDrD,EAAmBmE,GACnBxB,SAASC,cAAc,SAASa,UAAUC,OAAO,UAjCzD,mDAmCQ/B,QAAQC,IAAI,UAAZ,MAnCR,4DA5Ka,kEAsNb,sBAAAf,EAAA,sDAEiC,qBAApBF,OAAOY,UAEhBZ,OAAOY,SAASiD,GAAG,kBAAnB,sBAAsC,sBAAA3D,EAAA,sEAE9BuD,IAF8B,4CAJ1C,4CAtNa,kEAoOb,sBAAAvD,EAAA,sDAEiC,qBAApBF,OAAOY,UAElBZ,OAAOY,SAASiD,GAAG,iBAAnB,uCAAqC,WAAeC,GAAf,SAAA5D,EAAA,6DACnCc,QAAQC,IAAI,4BAA4B6C,GADL,SAE7BL,IAF6B,2CAArC,uDAJF,2CApOa,iCAiPEM,IAjPF,2EAiPb,gCAAA7D,EAAA,yDAEiC,qBAApBF,OAAOY,SAFpB,wBAGUM,EAAW,IAAIC,IAAOC,UAAUC,aAAarB,OAAOY,UAEpDoC,EAAW,IAAI7B,IAAO8B,SAAStE,EAAgBuE,EAAQC,IAAKjC,GALtE,kBAOyB8B,EAASxD,OAPlC,OAOYwE,EAPZ,OAQMhD,QAAQC,IAAI,sBAAuB+C,EAAKpC,YAExCnC,EAAQuE,EAAKpC,YAVnB,kDAaMZ,QAAQC,IAAI,UAAZ,MAbN,2DAjPa,+BAyQEkB,KAzQF,8EAyQb,oCAAAjC,EAAA,yDAEiC,qBAApBF,OAAOY,SAFpB,wBAIUM,EAAW,IAAIC,IAAOC,UAAUC,aAAarB,OAAOY,UACpDoC,EAAW,IAAI7B,IAAO8B,SAAStE,EAAgBuE,EAAQC,IAAKjC,GALtE,kBAQ4B8B,EAASiB,eARrC,OAQYV,EARZ,OASUW,EAAS/C,IAAOkB,MAAMC,YAAYiB,GAAS3B,WAC3C4B,EAAOhB,OAAOC,WAAWyB,GAAQxB,QAAQ,GAC7CzD,EAAmBuE,GAXzB,kDAcMxC,QAAQC,IAAI,UAAZ,MAdN,2DAzQa,oEAmSb,4CAAAf,EAAA,yDAEiC,qBAApBF,OAAOY,SAFpB,sBAGQtB,EAAS,GAHjB,iCAI8BU,OAAOY,SAASC,QAAQ,CAAEC,OAAQ,wBAJhE,0CAIaqD,EAJb,KAKMnD,QAAQC,IAAI,qBAAsBkD,GAC5BjD,EAAW,IAAIC,IAAOC,UAAUC,aAAarB,OAAOY,UACpDW,EAASL,EAASM,YAClBwB,EAAW,IAAI7B,IAAO8B,SAAStE,EAAgBuE,EAAQC,IAAK5B,GAG5D6C,EAAYjD,IAAOkB,MAAMgC,WAAW/E,GAXhD,oBAgBkC0D,EAASsB,UAAUH,EAAS,CAAEI,MAAOH,IAhBvE,eAgBcI,EAhBd,OAiBQxD,QAAQC,IAAI,sBACZwD,IAAKC,KAAK,CACRC,MAAO,oCACPC,KAAM,4BAENC,mBAAmB,EACnBC,SAAU,gFACVC,WAAY,IACZC,YAAa,IACbC,SAAU,sBA1BpB,UA6B+BT,EAAYU,OA7B3C,iBAgCUT,IAAKC,KAAK,CACRC,MAAM,qBAAD,OAAqB/E,EAArB,6BAAoDuE,GACzDgB,KAAK,2CAAD,OAA6CX,EAAYY,KAAzD,oEACJC,KAAM,UACNC,kBAAoB,+BACpBC,mBAAoB,kBACpBC,gBAAgB,EAChBC,iBAAiB,IAEhBC,MAAK,SAACnD,GAEHA,EAAOoD,YAETC,KAESrD,EAAOsD,YAQpB1D,KACA5C,EAAU,GACVkE,KAGFzC,QAAQC,IAAR,oBAAyBkD,EAAzB,0CA5DR,mDA+DY2B,EAAe,KAAIC,QAEnB,KAAI/B,OAGJ8B,EADuB,wDAArB,KAAI9B,KAAK+B,QACK,kCAEA,uCAIpBtB,IAAKC,KAAK,CACRC,MAAO,SACPC,KAAK,GAAD,OAAKkB,GACTT,KAAM,QACNC,kBAAmB,WAErBtE,QAAQC,IAAI,UAAZ,MAhFR,4DAnSa,sBAiBb+E,qBAAU,WAER,OADAhG,OAAOiG,iBAAiB,SAAUlG,GAC3B,WACLC,OAAOkG,oBAAoB,SAAUnG,MAEtC,IAEHiG,qBAAU,WAERhF,QAAQC,IAAI,yCAEZwC,IA5BW,mCA6BX0C,GA7BW,mCA8BXC,GACArC,IACA5B,OAEA,IAuCF6D,qBAAU,WAGNhF,QAAQC,IAAI,gCAjEO,SAkEhBnC,GAA0C,WAAZA,EAE7B2F,IAAKC,KAAK,CACRC,MAAO,MAEPC,KAAM,cAAc9F,EACpBuH,kBAAkB,EAClBf,kBAAmB,iBAEnBR,SAAU,4DACVC,WAAY,IAEZE,SAAU,4BACTS,MAAK,SAACnD,GAEHA,EAAOoD,aA5FR,mCA6FDW,OAMJvC,IACA5B,MAGAnB,QAAQC,IAAI,6CAA8CnC,KAEhE,CAACA,IAG4B,qBAApBkB,OAAOY,WAEhBI,QAAQC,IAAI,wCAEZwD,IAAKC,KAAK,CACRC,MAAQ,eACRC,KAAM,yCACNyB,kBAAkB,EAClBf,kBAAmB,oBACnBR,SAAU,iCAGVG,SAAU,wBACTS,MAAK,SAACnD,GAEHA,EAAOoD,aACT3F,OAAOuG,KAAK,sFAAuF,cAuIzGP,qBAAU,WACRhF,QAAQC,IAAI,oBACZe,SAASC,cAAc,SAASC,UAAY1C,IAE5C,CAACA,IAqBHwG,qBAAU,WACRhF,QAAQC,IAAI,+BACZe,SAASC,cAAc,YAAYC,UAAYlD,IAE/C,CAACA,IA6FH,IAAM4G,GAAkB,uCAAG,sBAAA1F,EAAA,yDAEM,qBAApBF,OAAOY,SAFO,uBAUF,6CACD,OACE,GACH,mFAbI,kBAwBIZ,OAAOY,SAASC,QAAQ,CAC7CC,OAAQ,oBACRC,OAAQ,CACNyF,KAAM,QACNC,QAAS,CACPC,QAnBW,6CAoBXjG,OAnBU,OAoBVC,SAnBY,GAoBZiG,MAnBS,uFAbI,gEAsCnB3F,QAAQC,IAAR,MAtCmB,0DAAH,qDA4CxB,OAEF,sBAAK2F,UAAU,MAAf,UACQ,uBAAMA,UAAU,iBAAiBC,MAAO,CAACC,UAAU,eAAD,OAA2B,GAAVjH,EAAjB,QAAlD,UACA,qBAAK+G,UAAU,OAAf,SACE,mBAAGA,UAAU,eAAeG,KAAK,wBAAjC,SACE,qBAAKC,IAAI,gBAAgBC,OAAO,KAAKC,IAAI,qBAG7C,sBAAKN,UAAU,OAAf,UACE,oBAAIA,UAAU,kBAAd,yDACA,oBAAIA,UAAU,OAAd,6EAGJ,uBAAMA,UAAU,oBAAhB,UACE,wBAAQA,UAAU,OAAlB,SACE,sBAAKA,UAAU,8DAAf,UACE,8BACE,mBAAGA,UAAU,eAAeG,KAAK,wBAAjC,SACE,qBAAKC,IAAI,gBAAgBC,OAAO,KAAKC,IAAI,qBAG7C,gCACE,wBAAQC,GAAG,SAASP,UAAU,yBAAyBQ,QAhctD,2CAgcD,+BACA,wBAAQD,GAAG,OAAOP,UAAU,4BAA5B,kBACA,yBAAQO,GAAG,OAAOP,UAAU,wBAA5B,cAAsDxH,EAAtD,mBAMN,sBAAKwH,UAAU,mBAAf,UACE,qBAAKA,UAAU,qCAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,yBAAf,UACE,+BAAK,qCAAL,gBACA,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,wBAAwBO,GAAG,OAAzC,sBAIJ,sBAAKP,UAAU,0BAAf,UACE,mCAAK,qCAAL,kBACA,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,wBAAwBO,GAAG,UAAzC,2BAMR,qBAAKP,UAAU,MAAf,SACE,sBAAKA,UAAU,cAAf,UACE,sBAAKO,GAAG,iBAAiBP,UAAU,mDAAnC,UACE,wBAAQS,aAAc,kBAAM1H,GAASD,IAAO4H,aAAc,kBAAM3H,GAASD,IAAOyH,GAAG,UAAUP,UAAU,YAAvG,SAAmH,mBAAGA,UAAU,iBAChI,qBAAKO,GAAG,aAAaP,UAAU,uBAA/B,SAAwDlH,EAAQ,mCAAyC,EAAPF,EAAWJ,GAAoB,QAAU,sDAE7I,sBAAKwH,UAAU,eAAf,UACI,wBAAOA,UAAU,6BAAjB,UAA8C,qBAAKA,UAAU,oBAAoBI,IAAI,oBAAoBE,IAAI,cAA7G,UACA,uBAAOV,KAAK,SAASe,KAAK,OAAOX,UAAU,qBAAqBY,UAAU,YAAYC,SAAU,SAAAC,GAAC,OAAInI,EAAUmI,EAAEC,OAAOpD,MAAMqD,QAAQ,IAAK,OAAOT,GAAG,aAAaU,YAAY,sBAAsBtD,MAAmB,IAAXjF,EAAe,GAAKA,OAEpO,sBAAKsH,UAAU,eAAf,UACI,wBAAOA,UAAU,mBAAjB,UAAoC,qBAAKA,UAAU,YAAYI,IAAI,0BAA0BE,IAAI,cAAjG,WACA,uBAAON,UAAU,qBAAqBO,GAAG,cAAc5C,MAAO3E,EAAYkI,UAAQ,OAEtF,yBAAQlB,UAAU,uBAAuBQ,QAzexC,4CAyeD,qBAAqE,gDAIzE,8BACA,mBAAGL,KAAK,wBAAR,SACE,qBAAKH,UAAU,aAAaI,IAAI,gBAAgBE,IAAI,qBAK5D,cAAC,IAAD,CAAaL,MAAO,CAACC,UAAU,cAAD,OAA0B,EAAVjH,EAAhB,QAC1B+G,UAAU,QACVI,IACE,0EAEFe,UAAU,EACVC,OAAO,QClgBfC,IAASC,OAEL,cAAC,EAAD,IACFlG,SAASmG,eAAe,W","file":"static/js/main.ee413799.chunk.js","sourcesContent":["import './App.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { ethers } from 'ethers'\r\nimport Presale from './artifacts/contracts/Presale.sol/Presale.json'\r\nimport Swal from 'sweetalert2'\r\nimport VideoPlayer from \"react-background-video-player\";\r\n\r\n\r\nconst presaleaddress = \"0x866849Dfde334e62663c26a629AF72cB5b49Aa95\" // TOPS - in testnet of Binance Smart Chain\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [network, setNetwork] = useState('no-net');\r\n  const [contractBalance, setContractBalance] = useState(0);\r\n  const [userAccount, setUserAccount] = useState('');\r\n  const [userBalance, setUserBalance] = useState(0);\r\n  const [userBalanceTops, setUserBalanceTops] = useState(0);\r\n  const [amount, setAmount] = useState(0);\r\n  const [rate, setRate] = useState(0);\r\n  const [info, setInfo] = useState(false);\r\n  let amountTops = amount * rate;\r\n  const BINANCENETWORK = 'bnbt'; // Testnet\r\n  //const BINANCENETWORK = 'bnb';\r\n\r\n  // parallax effect\r\n  const [offSetY, setOffSetY] = useState(0);\r\n  const handleScroll = () => setOffSetY(window.scrollY);\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(function () {\r\n\r\n    console.log('El gran useEffect con cinco funciones')\r\n\r\n    isconnectedMetamask();\r\n    changeAccounts();\r\n    changeNetwork();\r\n    fetchrate();\r\n    getBalance();\r\n\r\n  },[],);\r\n\r\n//===========================================================================================\r\n  async function addNetwork() {\r\n\r\n    // let networkData = [{\r\n    //         chainId: \"0x61\",\r\n    //         chainName: \"BSCTESTNET\",\r\n    //         rpcUrls: [\"https://data-seed-prebsc-2-s3.binance.org:8545\"],\r\n    //         nativeCurrency: {\r\n    //           name: \"BINANCE COIN\",\r\n    //           symbol: \"BNB\",\r\n    //           decimals: 18,\r\n    //         },\r\n    //         blockExplorerUrls: [\"https://testnet.bscscan.com/\"],\r\n    //       },\r\n    //     ];\r\n\r\n      let networkData = [{\r\n          chainId: \"0x38\",\r\n          chainName: \"BSCMAINET\",\r\n          rpcUrls: [\"https://bsc-dataseed1.binance.org\"],\r\n          nativeCurrency: {\r\n            name: \"BINANCE COIN\",\r\n            symbol: \"BNB\",\r\n            decimals: 18,\r\n          },\r\n          blockExplorerUrls: [\"https://testnet.bscscan.com/\"],\r\n        },\r\n      ];\r\n\r\n      // agregar red o cambiar red\r\n      return window.ethereum.request({\r\n        method: \"wallet_addEthereumChain\",\r\n        params: networkData,\r\n      });\r\n  }\r\n\r\n//===========================================================================================\r\n  useEffect(function () {\r\n\r\n    \r\n      console.log('Dentro del useEffect network')\r\n      if(network !== BINANCENETWORK && network !== 'no-net' ){ \r\n\r\n          Swal.fire({\r\n            title: 'red',\r\n            //text: `Cambia a BSC si la tienes o sigue el siguiente tutorial para configurarla`,\r\n            text: 'cambia-red '+network,\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Configurar red',\r\n            //imageUrl: 'https://i2.wp.com/criptotendencia.com/wp-content/uploads/2020/04/binance-smart-chain.jpg?fit=1200%2C674&ssl=1',\r\n            imageUrl: 'https://cryptodaily.io/wp-content/uploads/2021/07/p-2.png',\r\n            imageWidth: 300,\r\n            \r\n            imageAlt: 'Red Binance Smart Chain',\r\n          }).then((result) => {\r\n            /* Read more about isConfirmed, isDenied below */\r\n            if (result.isConfirmed) {\r\n              addNetwork();\r\n              //window.open('https://academy.binance.com/es/articles/connecting-metamask-to-binance-smart-chain', '_blank');  \r\n            }\r\n          })\r\n        } else {\r\n\r\n          fetchrate();\r\n          getBalance();\r\n        }\r\n          \r\n          console.log('useEffect de control de network. resultado', network );\r\n\r\n  },[network]);\r\n\r\n\r\n  if (typeof window.ethereum === 'undefined') {\r\n  \r\n    console.log('Metamask no existe en este navegador')\r\n\r\n    Swal.fire({\r\n      title:  'Sin Metamask',\r\n      text: \"Tendrá que instalarse una billetera\",\r\n      showCancelButton: true,\r\n      confirmButtonText: 'instalar metamask',\r\n      imageUrl: './img/metamask-transparent.png',\r\n      // imageWidth: 600,\r\n      // imageHeight: 150,\r\n      imageAlt: 'instalando metamask',\r\n    }).then((result) => {\r\n      /* Read more about isConfirmed, isDenied below */\r\n      if (result.isConfirmed) {\r\n        window.open('https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn', '_blank');  \r\n      }\r\n    })\r\n  } \r\n\r\n  async function conectionMetamask() {\r\n    console.log('funcion connection metamask');\r\n\r\n    await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n\r\n    const network = await provider.getNetwork();\r\n    console.log('network', network.name);\r\n    setNetwork(network.name);\r\n\r\n    const signer = provider.getSigner(); // user\r\n    const accountUser = await signer.getAddress();\r\n\r\n    let cuentaUsuario = accountUser.toString();\r\n    let subini = cuentaUsuario.substr(0,4);\r\n    let subfinal = cuentaUsuario.substr(-4,4);\r\n    document.querySelector('#wallet').innerHTML = `${subini} ... ${subfinal}`;\r\n\r\n    const accountUserBalance = await provider.getBalance(accountUser);\r\n    let amount = ethers.utils.formatEther(accountUserBalance).toString();\r\n    let result = Number.parseFloat(amount).toFixed(2);\r\n    const SYMBOL = \"BNB\";\r\n    let resultado = result.concat(\" \", SYMBOL);\r\n    let bnbButton = document.querySelector('#bnbs');\r\n    bnbButton.classList.remove('d-none');\r\n    bnbButton.innerHTML = resultado;\r\n    \r\n    const contract = new ethers.Contract(presaleaddress, Presale.abi, provider);\r\n    try {\r\n      const balanceTops = await contract.getBalanceTops({ from: cuentaUsuario });\r\n      let balance = ethers.utils.formatEther(balanceTops).toString();\r\n      let tops = Number.parseFloat(balance).toFixed(0);\r\n      setUserBalanceTops(tops);\r\n      document.querySelector('#tops').classList.remove('d-none');\r\n\r\n    } catch (err) {\r\n      console.log(\"Error: \", err)\r\n    }\r\n\r\n\r\n  }\r\n\r\n  \r\n  async function isconnectedMetamask() {\r\n\r\n      const accounts = await window.ethereum.request({ method: 'eth_accounts' });\r\n      let cuentaUsuario = accounts[0];\r\n\r\n      if (cuentaUsuario) {\r\n        \r\n        let subini = cuentaUsuario.substr(0,4);\r\n        let subfinal = cuentaUsuario.substr(-4,4);\r\n        let cuentaRecortada = `${subini} ... ${subfinal}`;\r\n        setUserAccount(cuentaUsuario);\r\n\r\n        document.querySelector('#wallet').innerHTML = cuentaRecortada;\r\n\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const contractUserBalance = await provider.getBalance(cuentaUsuario);\r\n        let amount = ethers.utils.formatEther(contractUserBalance).toString();\r\n        let result = Number.parseFloat(amount).toFixed(2);\r\n        let bnbButton = document.querySelector('#bnbs');\r\n        bnbButton.classList.remove('d-none');\r\n        bnbButton.innerHTML = `${result} BNB`;\r\n        setUserBalance(`${result} BNB`);\r\n\r\n        const network = await provider.getNetwork();\r\n        console.log('network', network.name);\r\n        setNetwork(network.name);\r\n\r\n        const contract = new ethers.Contract(presaleaddress, Presale.abi, provider);\r\n        try {\r\n          const balanceTops = await contract.getBalanceTops({ from: cuentaUsuario });\r\n          let amountTops = ethers.utils.formatEther(balanceTops).toString();\r\n          let tops = Number.parseFloat(amountTops).toFixed(0);\r\n          setUserBalanceTops(tops);\r\n          document.querySelector('#tops').classList.remove('d-none');\r\n        } catch (err) {\r\n          console.log(\"Error: \", err)\r\n        }\r\n      \r\n      }\r\n  }\r\n  \r\n  // funcion que detecta los cambios de cuenta\r\n  async function changeAccounts() {\r\n  \r\n    if (typeof window.ethereum !== 'undefined') {\r\n\r\n      window.ethereum.on(\"accountsChanged\", async function () {\r\n\r\n        await isconnectedMetamask();\r\n        \r\n      });\r\n\r\n    }\r\n  }\r\n\r\n   // funcion que detecta los cambios de red\r\n  async function changeNetwork() {\r\n  \r\n    if (typeof window.ethereum !== 'undefined') {\r\n    // detect Network account change\r\n    window.ethereum.on('networkChanged', async function(networkId) {\r\n      console.log('cambio de red efectuado..',networkId);\r\n      await isconnectedMetamask();\r\n    });\r\n\r\n    }\r\n  }\r\n\r\n\r\n  async function fetchrate() {\r\n\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n      // console.log({ provider })\r\n      const contract = new ethers.Contract(presaleaddress, Presale.abi, provider)\r\n      try {\r\n        const data = await contract.rate();\r\n        console.log('Tokens por un BNB: ', data.toString());\r\n\r\n        setRate(data.toString());\r\n\r\n      } catch (err) {\r\n        console.log(\"Error: \", err)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(function () {\r\n    console.log('useffect de rate');\r\n    document.querySelector('#rate').innerHTML = rate;\r\n\r\n  },[rate]);\r\n\r\n  async function getBalance() {\r\n\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      //  const [account] = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const contract = new ethers.Contract(presaleaddress, Presale.abi, provider);\r\n\r\n      try {\r\n        const balance = await contract.TokenBalance();\r\n        let tokens = ethers.utils.formatEther(balance).toString();\r\n        let tops = Number.parseFloat(tokens).toFixed(0);\r\n        setContractBalance(tops);\r\n\r\n      } catch (err) {\r\n        console.log(\"Error: \", err)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(function () {\r\n    console.log('useeffect de contracBalance');\r\n    document.querySelector('#balance').innerHTML = contractBalance;\r\n\r\n  },[contractBalance]);\r\n  \r\n\r\n  async function buytokens() {\r\n  \r\n    if (typeof window.ethereum !== 'undefined') {\r\n      if (amount > 0) {\r\n        const [account] = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n        console.log('cuenta conectada: ', account);\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const signer = provider.getSigner();\r\n        const contract = new ethers.Contract(presaleaddress, Presale.abi, signer);\r\n        // console.log('amount', amount);\r\n        //console.log('signer', signer);\r\n        const bnbamount = ethers.utils.parseEther(amount);\r\n        \r\n        try {\r\n\r\n\r\n          const transaction = await contract.buyTokens(account, { value: bnbamount });\r\n          console.log(\"Esperando compraOk\");\r\n          Swal.fire({\r\n            title: 'El proceso de compra ha comenzado',\r\n            text: 'No actualice la página',\r\n            // icon: 'info',\r\n            showConfirmButton: false,\r\n            imageUrl: 'https://thumbs.gfycat.com/ConventionalOblongFairybluebird-size_restricted.gif',\r\n            imageWidth: 100,\r\n            imageHeight: 100,\r\n            imageAlt: 'proceso de compra',\r\n\r\n          })\r\n          const compraOk = await transaction.wait();\r\n\r\n          if (compraOk) {\r\n            Swal.fire({\r\n              title:  `Se han envíado ${amountTops} TOPS a la cuenta ${account}`,\r\n              html: `<a href=\"https://testnet.bscscan.com/tx/${transaction.hash}\" target=\"_blank\" rel=\"noreferrer\">Hash de la transacción</a>`,\r\n              icon: 'success',\r\n              confirmButtonText:  'Añadir Tops a su Metamask',\r\n              confirmButtonClass: \"btn btn-success\",\r\n              buttonsStyling: false,\r\n              showCloseButton: true,\r\n              \r\n            }).then((result) => {\r\n              /* Read more about isConfirmed, isDenied below */\r\n              if (result.isConfirmed) {\r\n                //Sí queremos añadir el token a Metamask\r\n                addTokenToMetamask();\r\n                \r\n              } else if (result.isDenied) {\r\n                // window.location.href = `https://testnet.bscscan.com/tx/${transation.hash}`;\r\n              }\r\n            })\r\n\r\n            \r\n            //let link = \"<a href='https://testnet.bscscan.com/tx/\"+transation.hash+\"'>Ver en EtherScan</a>\";\r\n            \r\n            getBalance();\r\n            setAmount(0);\r\n            isconnectedMetamask();\r\n          }\r\n\r\n          console.log(`La cuenta ${account}, ha recibido los Tops correctamente.`);\r\n\r\n        } catch (err) {\r\n          let mensajeError = err.message;\r\n           \r\n          if (err.data) {\r\n\r\n            if (err.data.message === 'execution reverted: Excede compra de Tops permitida') {\r\n              mensajeError =  'Excede compra de Tops permitida';\r\n            } else {\r\n              mensajeError =  'La transacción ha sido rechazada';\r\n            }\r\n          }\r\n      \r\n          Swal.fire({\r\n            title: 'Ooops!',\r\n            text: `${mensajeError}`,\r\n            icon: 'error',\r\n            confirmButtonText: 'Cerrar'\r\n          })\r\n          console.log(\"Error: \", err)\r\n        }\r\n\r\n        \r\n\r\n      }\r\n    \r\n    }\r\n  }\r\n\r\n  const addTokenToMetamask = async () => {\r\n\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      // Trusty Token\r\n      // const tokenAddress = '0x21176b07a996E62C905e5bf29b1E3e8F1f237d8A';\r\n      // const tokenSymbol = 'TRUSTY';\r\n      // const tokenDecimals = 18;\r\n      // const tokenImage = 'https://cdn.iconscout.com/icon/premium/png-512-thumb/token-565844.png';\r\n\r\n      //TOPS test Token\r\n      const tokenAddress = '0x3A72fCf12c7eEa27C4B0ae289bAb050E9d2F334E';\r\n      const tokenSymbol = 'TOPS';\r\n      const tokenDecimals = 18;\r\n      const tokenImage = 'https://gateway.pinata.cloud/ipfs/QmZYvNcugtVgWQKcfpafhZgXNkjJdW6FHCKj4hsPEaFB5G';\r\n\r\n      // TestToken\r\n      // const tokenAddress = '0x2C9BF725417e633354697AC52Aa9BCc59d1039c6';\r\n      // const tokenSymbol = 'TTT';\r\n      // const tokenDecimals = 18;\r\n      // const tokenImage = 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/f7/Antu_dialog-warning.svg/512px-Antu_dialog-warning.svg.png';\r\n\r\n      \r\n        try {\r\n          // wasAdded is a boolean. Like any RPC method, an error may be thrown.\r\n          const wasAdded = await window.ethereum.request({\r\n            method: 'wallet_watchAsset',\r\n            params: {\r\n              type: 'ERC20', // Initially only supports ERC20, but eventually more!\r\n              options: {\r\n                address: tokenAddress, // The address that the token is at.\r\n                symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\r\n                decimals: tokenDecimals, // The number of decimals in the token\r\n                image: tokenImage, // A string url of the token logo\r\n              },\r\n            },\r\n          });\r\n\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n\r\n<div className=\"App\">\r\n        <main className=\"d-lg-none mt-5\" style={{transform: `translateY(-${offSetY * 0.3}px)`}}>\r\n        <div className=\"my-5\">\r\n          <a className=\"navbar-brand\" href=\"https://topstars.app/\">\r\n            <img src=\"./logo192.png\" height=\"30\" alt=\"Logo de Tops\" />\r\n          </a>\r\n        </div>\r\n        <div className=\"my-5\">\r\n          <h2 className=\"text-white my-5\">The sale is only enabled through a computer</h2>\r\n          <h2 className=\"my-5\">La venta solo es posible conectándose con un Ordenador</h2>\r\n        </div>\r\n      </main>\r\n      <main className=\"d-none d-lg-block\">\r\n        <header className=\"mb-5\">\r\n          <nav className=\"d-flex justify-content-between align-items-center mx-3 my-3\">\r\n            <div>\r\n              <a className=\"navbar-brand\" href=\"https://topstars.app/\">\r\n                <img src=\"./logo192.png\" height=\"70\" alt=\"Logo de Tops\" />\r\n              </a>\r\n            </div>\r\n            <div>\r\n              <button id=\"wallet\" className=\"connectionMM btnHeader\" onClick={conectionMetamask}>Conectar Metamask</button>\r\n              <button id=\"bnbs\" className=\"BNB btnHeader mx-2 d-none\">BNBs</button>\r\n              <button id=\"tops\" className=\"tops btnHeader d-none\"> {userBalanceTops} Tops</button>\r\n              {/* {(i18n.language == \"en\") ? <a className=\"col-md-2\" onClick={() => i18n.changeLanguage('es')}><img src=\"./img/es.png\" alt=\"Español\" /></a> : <a className=\"col-md-2\" onClick={() => i18n.changeLanguage('en')}><img src=\"./img/en.png\" alt=\"English\" /></a>} */}\r\n            </div>\r\n          </nav>\r\n        </header>\r\n      \r\n        <div className=\"App-buttons my-3\">\r\n          <div className=\"row mt-3 mt-md-0 mb-3 mx-3 mx-md-0\">\r\n            <div className=\"card-deck\">\r\n              <div className=\"card pt-5 pb-3 bnbCard\">\r\n                <h2 ><b>Tops</b> por 1 BNB</h2>\r\n                <div className=\"card-body\">\r\n                  <h3 className=\"card-title numberSize\" id=\"rate\">...</h3>\r\n\r\n                </div>\r\n              </div>\r\n              <div className=\"card pt-5 pb-3 topsCard\">\r\n                <h2> <b>Tops</b> disponibles</h2>\r\n                <div className=\"card-body\">\r\n                  <h3 className=\"card-title numberSize\" id=\"balance\">...</h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"row\">\r\n            <div className=\"col-12 mb-5\">\r\n              <div id=\"infoBuyAllowed\" className=\"d-flex align-items-center justify-content-center\">\r\n                <button onMouseEnter={() => setInfo(!info)} onMouseLeave={() => setInfo(!info)} id=\"btnInfo\" className=\"info mr-3\"><i className=\"fa fa-info\"></i></button>\r\n                <div id=\"buyForUser\" className=\"display-5 text-white\">{ info  ? 'Usted todavía puede comprar ' + (rate * 3 - userBalanceTops) +  ' Tops' : \"Máxima compra permitida por usuario: 3 BNBs\" }</div>\r\n              </div>\r\n              <div className=\"form-wrapper\">\r\n                  <label className=\"bnb-brand font-weight-bold\"><img className=\"mr-2 mb-2 logoBNB\" src=\"./img/logoBNB.png\" alt=\"Logo Tops\" /> BNB</label>\r\n                  <input type=\"number\" step=\"0.01\" className=\"text-center amount\" autoFocus=\"autofocus\" onChange={e => setAmount(e.target.value.replace(',', '.'))} id=\"amount-bnb\" placeholder='Introduzca cantidad' value={(amount === 0)? \"\" : amount} />\r\n              </div>\r\n              <div className=\"form-wrapper\">\r\n                  <label className=\"font-weight-bold\"><img className=\"mr-2 mb-2\" src=\"./img/mini-logotops.png\" alt=\"Logo Tops\" /> Tops</label>\r\n                  <input className=\"text-center amount\" id=\"amount-tops\" value={amountTops} disabled />\r\n              </div>\r\n              <button className=\"buy font-weight-bold\" onClick={buytokens}>Comprar <b>Tops</b></button>\r\n            </div>\r\n          </div>     \r\n        </div>\r\n          <div>\r\n          <a href=\"https://topstars.app/\">\r\n            <img className=\"logoBlanco\" src=\"./logo192.png\" alt=\"Logo Tops\" />\r\n          </a>\r\n        </div>\r\n      </main>\r\n\r\n    <VideoPlayer style={{transform: `translateY(${offSetY * 1}px)`}}\r\n        className=\"Video\"\r\n        src={\r\n          \"https://topstars.app//wp-content//uploads//2021//06//dj-party-video.mp4\"\r\n        }\r\n        autoPlay={true}\r\n        muted={true}\r\n      />\r\n</div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}